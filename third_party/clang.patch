diff -ur clang-10.0.0.src/CMakeLists.txt clang/CMakeLists.txt
--- clang-10.0.0.src/CMakeLists.txt	2020-03-23 11:01:02.000000000 -0400
+++ clang/CMakeLists.txt	2020-06-12 22:13:00.125961985 -0400
@@ -458,6 +458,16 @@
 
 add_definitions( -D_GNU_SOURCE )
 
+if(NOT DEFINED FUZZER_CLIENT_LIB_PATH)
+  message(FATAL_ERROR "FUZZER_CLIENT_LIB_PATH is not set")
+endif()
+if(NOT DEFINED COLLECTOR_PASS_LIB_PATH)
+  message(FATAL_ERROR "COLLECTOR_PASS_LIB_PATH is not set")
+endif()
+add_definitions(
+  -DFUZZER_CLIENT_LIB_PATH="${FUZZER_CLIENT_LIB_PATH}"
+  -DCOLLECTOR_PASS_LIB_PATH="${COLLECTOR_PASS_LIB_PATH}")
+
 option(CLANG_BUILD_TOOLS
   "Build the Clang tools. If OFF, just generate build targets." ON)
 
diff -ur clang-10.0.0.src/lib/CodeGen/BackendUtil.cpp clang/lib/CodeGen/BackendUtil.cpp
--- clang-10.0.0.src/lib/CodeGen/BackendUtil.cpp	2020-03-23 11:01:02.000000000 -0400
+++ clang/lib/CodeGen/BackendUtil.cpp	2020-04-25 13:33:31.177312955 -0400
@@ -221,6 +221,16 @@
   return Opts;
 }
 
+static void addCollectorPass(const PassManagerBuilder &Builder,
+                             legacy::PassManagerBase &PM) {
+  llvm::sys::DynamicLibrary::LoadLibraryPermanently(
+      COLLECTOR_PASS_LIB_PATH);
+  const auto *PassInfo = PassRegistry::getPassRegistry()->getPassInfo(
+      StringRef("fuzvisor-collector"));
+  assert(PassInfo != nullptr);
+  PM.add(PassInfo->createPass());
+}
+
 static void addSanitizerCoveragePass(const PassManagerBuilder &Builder,
                                      legacy::PassManagerBase &PM) {
   const PassManagerBuilderWrapper &BuilderWrapper =
@@ -622,6 +632,10 @@
                            addSanitizerCoveragePass);
     PMBuilder.addExtension(PassManagerBuilder::EP_EnabledOnOptLevel0,
                            addSanitizerCoveragePass);
+    PMBuilder.addExtension(PassManagerBuilder::EP_OptimizerLast,
+                           addCollectorPass);
+    PMBuilder.addExtension(PassManagerBuilder::EP_EnabledOnOptLevel0,
+                           addCollectorPass);
   }
 
   if (LangOpts.Sanitize.has(SanitizerKind::Address)) {
diff -ur clang-10.0.0.src/lib/Driver/ToolChains/CommonArgs.cpp clang/lib/Driver/ToolChains/CommonArgs.cpp
--- clang-10.0.0.src/lib/Driver/ToolChains/CommonArgs.cpp	2020-03-23 11:01:02.000000000 -0400
+++ clang/lib/Driver/ToolChains/CommonArgs.cpp	2020-06-12 23:11:08.278004432 -0400
@@ -726,6 +726,8 @@
     addSanitizerRuntime(TC, Args, CmdArgs, "fuzzer", false, true);
     if (!Args.hasArg(clang::driver::options::OPT_nostdlibxx))
       TC.AddCXXStdlibLibArgs(Args, CmdArgs);
+
+    CmdArgs.push_back(Args.MakeArgString(FUZZER_CLIENT_LIB_PATH));
   }
 
   for (auto RT : SharedRuntimes)
